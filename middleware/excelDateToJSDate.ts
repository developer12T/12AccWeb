export async function loadXLSX() {
  const XLSX = await import('xlsx-js-style')
  return XLSX
}

export function excelDateToJSDate(serial: number): Date {
  const utcDays = Math.floor(serial - 25569);
  const utcSeconds = utcDays * 86400;
  const date = new Date(utcSeconds * 1000);

  const fractionalDay = serial - Math.floor(serial) + 0.0000001;
  let totalSeconds = Math.floor(86400 * fractionalDay);

  const seconds = totalSeconds % 60;
  totalSeconds -= seconds;

  const hours = Math.floor(totalSeconds / 3600);
  const minutes = Math.floor((totalSeconds % 3600) / 60);

  date.setUTCHours(hours);
  date.setUTCMinutes(minutes);
  date.setUTCSeconds(seconds);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤ 7 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ (UTC+7)
  // date.setUTCHours(date.getUTCHours() + 7);

  return date;
}

export function formatDateToYYYYMMDD(date: Date): string {
  const yyyy = date.getFullYear()
  const mm = String(date.getMonth() + 1).padStart(2, '0') // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 0-11 ‚Üí +1
  const dd = String(date.getDate()).padStart(2, '0')
  return `${yyyy}${mm}${dd}`
}

export function getThaiRegisterTime() {
  const localTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;

  let date: Date;

  if (localTimezone === 'Asia/Bangkok') {
    // üëâ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏á ‡πÜ
    date = new Date();
  } else {
    // üëâ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢ ‚Üí ‡∏ï‡πâ‡∏≠‡∏á‡∏ö‡∏ß‡∏Å +7 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏à‡∏≤‡∏Å UTC
    const utcNow = new Date();
    const offsetMs = 7 * 60 * 60 * 1000;
    date = new Date(utcNow.getTime() + offsetMs);
  }

  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô HHMMSS
  const hours = String(date.getHours()).padStart(2, '0');
  const minutes = String(date.getMinutes()).padStart(2, '0');
  const seconds = String(date.getSeconds()).padStart(2, '0');

  const TVRGTM = `${hours}${minutes}${seconds}`;        // ‡πÄ‡∏ä‡πà‡∏ô "145230"
  const displayTime = `${hours}:${minutes}:${seconds}`; // ‡πÄ‡∏ä‡πà‡∏ô "14:52:30"

  return { TVRGTM, displayTime };
}
